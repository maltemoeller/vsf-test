{"version":3,"file":"index.cjs.js","sources":["../src/integrations.ts","../src/createServer.ts"],"sourcesContent":["import consola from 'consola';\nimport { Express } from 'express';\nimport {\n  Integration,\n  ApiClientFactory,\n  ApiClientExtension,\n  IntegrationsSection,\n  CustomQuery\n} from '@vue-storefront/core';\n\ninterface IntegrationLoaded {\n  apiClient: ApiClientFactory;\n  configuration: any;\n  extensions: ApiClientExtension[];\n  customQueries?: Record<string, CustomQuery>\n}\n\ntype IntegrationsLoaded = Record<string, IntegrationLoaded>\n\nconst createRawExtensions = (apiClient: ApiClientFactory, integration: Integration): ApiClientExtension[] => {\n  const extensionsCreateFn = integration.extensions;\n  const predefinedExtensions = (apiClient.createApiClient as any)._predefinedExtensions;\n  return extensionsCreateFn ? extensionsCreateFn(predefinedExtensions) : predefinedExtensions;\n};\n\nconst lookUpExternal = (curr: string | ApiClientExtension): ApiClientExtension[] =>\n  // eslint-disable-next-line global-require\n  typeof curr === 'string' ? require(curr) : [curr];\n\nconst createExtensions = (rawExtensions: ApiClientExtension[]): ApiClientExtension[] => rawExtensions\n  .reduce((prev, curr) => [...prev, ...lookUpExternal(curr)], []);\n\nconst registerIntegrations = (app: Express, integrations: IntegrationsSection): IntegrationsLoaded =>\n  Object.entries<Integration>(integrations).reduce((prev, [tag, integration]) => {\n    consola.info(`- Loading: ${tag} ${integration.location}`);\n\n    // eslint-disable-next-line global-require\n    const apiClient: ApiClientFactory = require(integration.location);\n    const rawExtensions: ApiClientExtension[] = createRawExtensions(apiClient, integration);\n    const extensions: ApiClientExtension[] = createExtensions(rawExtensions);\n\n    extensions.forEach(({ name, extendApp }) => {\n      consola.info(`- Loading: ${tag} extension: ${name}`);\n\n      if (extendApp) {\n        extendApp({ app, configuration: integration.configuration });\n      }\n    });\n\n    consola.success(`- Integration: ${tag} loaded!`);\n\n    return {\n      ...prev,\n      [tag]: {\n        apiClient,\n        extensions,\n        configuration: integration.configuration,\n        customQueries: integration.customQueries\n      }\n    };\n  }, {});\n\nexport { registerIntegrations };\n","import express, { Request, Response, Express } from 'express';\nimport cookieParser from 'cookie-parser';\nimport cors from 'cors';\nimport consola from 'consola';\nimport { MiddlewareConfig, ApiClientExtension, CustomQuery } from '@vue-storefront/core';\nimport { registerIntegrations } from './integrations';\n\nconst app = express();\napp.use(express.json());\napp.use(cookieParser());\napp.use(cors());\n\ninterface MiddlewareContext {\n  req: Request;\n  res: Response;\n  extensions: ApiClientExtension[];\n  customQueries: Record<string, CustomQuery>;\n}\n\ninterface RequestParams {\n  integrationName: string;\n  functionName: string;\n}\n\nfunction createServer (config: MiddlewareConfig): Express {\n  consola.info('Middleware starting....');\n  consola.info('Loading integartions...');\n\n  const integrations = registerIntegrations(app, config.integrations);\n\n  consola.success('Integrations loaded!');\n\n  app.post('/:integrationName/:functionName', async (req: Request, res: Response) => {\n    const { integrationName, functionName } = req.params as any as RequestParams;\n    const { apiClient, configuration, extensions, customQueries } = integrations[integrationName];\n    const middlewareContext: MiddlewareContext = { req, res, extensions, customQueries };\n    const createApiClient = apiClient.createApiClient.bind({ middleware: middlewareContext });\n    const apiClientInstance = createApiClient(configuration);\n    const apiFunction = apiClientInstance.api[functionName];\n    try {\n      const platformResponse = await apiFunction(...req.body);\n\n      res.send(platformResponse);\n    } catch (error) {\n      res.status(500);\n\n      res.send(error);\n    }\n  });\n\n  consola.success('Middleware created!');\n\n  return app;\n}\n\nexport { createServer };\n"],"names":[],"mappings":"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"}